import type { Module, ModuleParameters } from "./Types.js";
/**
 * Creates a Module object from the given parameters parameters.
 *
 * This function takes the module parameters details and constructs a standardized
 * Module object with methods for signing and generating stub signatures.
 *
 * @param parameters - The parameters defining the module parameters.
 * @returns A Module object with standardized methods and properties.
 *
 * @example
 * ```typescript
 * const myModule = toModule({
 *   accountAddress: '0x1234...',
 *   address: '0x5678...',
 *   signer: mySigner,
 *   initData: '0xabcd...',
 *   // ... other parameters
 * });
 * ```
 *
 * @remarks
 * - The returned Module object includes methods for getting stub signatures, signing user operation hashes, and signing messages.
 * - The `getStubSignature` method generates a dummy signature for testing or placeholder purposes.
 * - The `signUserOpHash` and `signMessage` methods use the provided signer to create actual signatures.
 */
export declare function toModule(parameters: ModuleParameters): Module;
//# sourceMappingURL=toModule.d.ts.map