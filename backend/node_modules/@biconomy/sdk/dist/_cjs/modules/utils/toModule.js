"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toModule = toModule;
const Helpers_js_1 = require("./Helpers.js");
function toModule(parameters) {
    const { account, extend, initArgs = {}, deInitData = "0x", initData = "0x", moduleInitArgs = "0x", accountAddress = account?.address ?? "0x", moduleInitData = {
        address: "0x",
        type: "validator"
    }, ...rest } = parameters;
    let data_ = parameters.data ?? {};
    const setData = (d) => {
        data_ = d;
    };
    const getData = () => data_;
    return {
        ...parameters,
        initData,
        moduleInitData,
        moduleInitArgs,
        deInitData,
        accountAddress,
        initArgs,
        setData,
        getData,
        module: parameters.address,
        type: "validator",
        getStubSignature: async () => {
            const dynamicPart = parameters.address.substring(2).padEnd(40, "0");
            return `0x0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000${dynamicPart}000000000000000000000000000000000000000000000000000000000000004181d4b4981670cb18f99f0b4a66446df1bf5b204d24cfcb659bf38ba27a4359b5711649ec2423c5e1247245eba2964679b6a1dbb85c992ae40b9b00c6935b02ff1b00000000000000000000000000000000000000000000000000000000000000`;
        },
        signUserOpHash: async (userOpHash) => await parameters.signer.signMessage({
            message: { raw: userOpHash }
        }),
        signMessage: async (message) => (0, Helpers_js_1.sanitizeSignature)(await parameters.signer.signMessage({ message })),
        ...extend,
        ...rest
    };
}
//# sourceMappingURL=toModule.js.map