import { UserAuthentication } from './authentication';
import { SignSetupOpts } from './networkSigner';
export declare class EphClaim {
    ephId: string;
    ephPK: string;
    expiry: number;
    constructor(ephId: string, ephPK: Uint8Array, lifetime?: number);
    private validateInputs;
    toJSON(): string;
}
/** Locally sign the signature requests to network without asking the user, the ephSK is registered during keygen.
 * The signature is the authorization for signgen operation
 */
export declare function authenticateUsingEphKey({ setup, challenge, ephSK, ephClaim, }: {
    setup: SignSetupOpts;
    challenge: string;
    ephSK: Uint8Array;
    ephClaim: EphClaim;
}): Promise<UserAuthentication>;
export declare function generateEphPrivateKey(): Uint8Array;
export declare function getEphPublicKey(ephSK: Uint8Array): Uint8Array;
